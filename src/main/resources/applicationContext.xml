<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.0.xsd
	http://www.springframework.org/schema/cache  http://www.springframework.org/schema/cache/spring-cache-4.0.xsd"
	default-lazy-init="true">
	
	<context:component-scan base-package="com.print.kuaidi.service" />
	<context:component-scan base-package="com.print.kuaidi.dao" />
    <aop:aspectj-autoproxy proxy-target-class="true"/>
    <!-- 支持异步方法执行 -->
    <task:annotation-driven /> 
	<context:annotation-config />
    
    <!-- 国际化 -->
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18n/format</value>
				<value>i18n/exceptions</value>
				<value>i18n/common</value>
			</list>
		</property>
	</bean>
	
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="com.commons.utils.CheckUtil.setResources" />
		<property name="arguments" ref="messageSource">
		</property>
	</bean>	
	<!-- jdbcSql -->
	<bean id="druidDataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        destroy-method="close">  
        <property name="url" value="jdbc:mysql://127.0.0.1:3306/kuaidi_print?characterEncoding=UTF-8" />  
        <property name="username" value="root" />  
        <property name="password" value="147852369" />  
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="filters" value="stat" />  
  
        <property name="maxActive" value="100" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
  
        <property name="timeBetweenEvictionRunsMillis" value="60000" />  
        <property name="minEvictableIdleTimeMillis" value="300000" />  
  
        <property name="validationQuery" value="SELECT &apos;x&apos;" />  
        <property name="testWhileIdle" value="true" />  
        <property name="testOnBorrow" value="false" />  
        <property name="testOnReturn" value="false" />  
        <property name="maxOpenPreparedStatements" value="100" />
    </bean>
   
    <!-- hibernate -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="druidDataSource" />
		<property name="packagesToScan">
			<list>
				<value>com.print.kuaidi.entity</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<value>
				hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
				hibernate.hbm2ddl.auto=none
				hibernate.show_sql=false
				hibernate.format_sql=false
				hibernate.enable_lazy_load_no_trans=true
				hibernate.cache.use_second_level_cache=true
				hibernate.cache.use_query_cache=true
				hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				hibernate.jdbc.fetch_size=50
				hibernate.jdbc.batch_size=50
				hibernate.connection.autocommit=true
				hibernate.connection.release_mode=auto
				hibernate.current_session_context_class=org.springframework.orm.hibernate5.SpringSessionContext
				javax.persistence.validation.mode=none
			</value>
		</property>
	</bean>
	
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">  
        <property name="sessionFactory" ref="sessionFactory"></property>  
    </bean>
    
	<!-- 事务和AOP -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate5.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="nativeJdbcExtractor"
		class="org.springframework.jdbc.support.nativejdbc.SimpleNativeJdbcExtractor" />

	<tx:annotation-driven transaction-manager="transactionManager"
		proxy-target-class="true" />

	<bean
		class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />


	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" />	    
		</tx:attributes>
	</tx:advice>

	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.print.kuaidi.service..*.*(..))" />
	</aop:config>
	
	<!-- aop -->
	<aop:aspectj-autoproxy />
	<bean id="controllerAop" class="com.commons.aop.ControllerAOP" />
	<aop:config>
		<aop:aspect id="myAop" ref="controllerAop">
			<aop:pointcut id="target"
				expression="execution(public com.commons.beans.ResultBean *(..))" />
			<aop:around method="handlerControllerMethod" pointcut-ref="target" />
		</aop:aspect>
	</aop:config>
	<!-- Spring中引入其他配置文件 -->
    <import resource="classpath*:/spring-mail.xml" />
    <import resource="classpath*:/spring-weixin.xml" />
</beans>